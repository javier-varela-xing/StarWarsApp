name: Run UI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  ui-tests:
    runs-on: macOS-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86_64
          script: ./gradlew connectedCheck

#jobs:
#  ui-tests:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK
#        uses: actions/setup-java@v2
#        with:
#          java-version: 17
#          distribution: "temurin"
#
#      - name: Download dependencies
#        run: ./gradlew dependencies
#
#      - name: Set up Android SDK
#        uses: android-actions/setup-android@v2
#
#      - name: Start emulator
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 30
#          target: google_apis
#          arch: x86_64
#          profile: Nexus 6
#          script: ./gradlew connectedCheck
#          disable-animations: true
#          emulator-boot-timeout: 1200
#
#      - name: Run UI tests
#        run: ./gradlew connectedCheck





#name: CI
#
#on:
#  # Triggers the workflow on push or pull request events for the main branch
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "tests"
#  tests:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Checkout the code
#        uses: actions/checkout@v4
#
##      - name: Cache Gradle files
##        uses: actions/cache@v3
##        with:
##          path: |
##            ~/.gradle/caches
##            ~/.gradle/wrapper
##          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
##          restore-keys: |
##            ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
##            ${{ runner.os }}
#
#      - name: Set up JDK
#        uses: actions/setup-java@v2
#        with:
#          java-version: 17
#          distribution: "temurin"
#
#      - name: Set up Android SDK
#        uses: android-actions/setup-android@v2
##        with: Creo que estas dos cosas de abajo no estÃ¡n permitidas
##          api-level: 30
##          build-tools: 30.0.3
#
#      - name: Grant execute permissions for gradlew
#        run: chmod +x ./gradlew
#
##      - name: Run unit tests
##        run: ./gradlew test
#
#      - name: Configure Android emulator and run instrumentation tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          target: google_apis
#          arch: x86_64
#          profile: Nexus 6
#          script: ./gradlew connectedCheck --stacktrace
#          disable-animations: true
#          emulator-boot-timeout: 1200
#
#      - name: Upload Test Reports
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: android-test-report
#          path: app/build/reports/androidTests/connected/debug/
#
##      - name: Wait for Android Emulator to finish booting
##        run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'
#
##      - name: Run integration tests
##        run: ./gradlew connectedAndroidTest
#
##      - name: Shutdown emulator
##        if: always()
##        run: |
##          if adb -s emulator-5554 get-state 1>/dev/null 2>&1; then
##            adb -s emulator-5554 emu kill;
##          fi
